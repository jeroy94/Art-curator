{% extends "base.html" %}

{% block content %}
<html lang="fr">
<head>
    <title>Liste des Œuvres</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<div class="container mt-4">
    {# Commenté pour supprimer les notifications flash #}
    {#
    {% with messages = get_flashed_messages(with_categories=true) %}
        {% if messages %}
            {% for category, message in messages %}
                <div class="alert alert-{{ category }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
        {% endif %}
    {% endwith %}
    #}

    <h1 class="mb-4">Liste des œuvres par artiste</h1>

    <div id="message-container" class="alert alert-success d-none"></div>

    {% for artist in artists %}
    <div class="card mb-4">
        <div class="card-header">
            <h2 class="h5 mb-0">{{ artist.nom }} {{ artist.prenom }}</h2>
            {% if artist.nom_artiste %}
            <small class="text-muted">Nom d'artiste : {{ artist.nom_artiste }}</small>
            {% endif %}
        </div>
        <div class="card-body">
            {% if artist.artworks %}
            <div class="row">
                {% for artwork in artist.artworks %}
                <div class="col-md-4 mb-3">
                    <div class="card" style="width: 350px;">
                        {% if artwork.photo_path %}
                        <div style="width: 300px; height: 200px; margin: 10px auto; display: flex; align-items: center; justify-content: center; background-color: #f8f9fa;">
                            <a href="#" data-bs-toggle="modal" data-bs-target="#imageModal{{ artwork.id }}">
                                <img src="{{ url_for('static', filename=artwork.photo_path) }}" 
                                     style="max-width: 300px; max-height: 200px; width: auto; height: auto;"
                                     alt="{{ artwork.titre }}">
                            </a>
                        </div>

                        <!-- Modal pour l'image -->
                        <div class="modal fade" id="imageModal{{ artwork.id }}" tabindex="-1" aria-labelledby="imageModalLabel{{ artwork.id }}" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="imageModalLabel{{ artwork.id }}">{{ artwork.titre }}</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                                    </div>
                                    <div class="modal-body text-center">
                                        <img src="{{ url_for('static', filename=artwork.photo_path) }}" 
                                             style="max-width: 100%; height: auto;"
                                             alt="{{ artwork.titre }}">
                                    </div>
                                </div>
                            </div>
                        </div>
                        {% else %}
                        <div class="bg-light text-center py-5">
                            <i class="fas fa-image fa-3x text-muted"></i>
                            <p class="text-muted mt-2">Pas de photo</p>
                        </div>
                        {% endif %}
                        <div class="card-body">
                            <h5 class="card-title">{{ artwork.titre }}</h5>
                            <p class="card-text">
                                <small>N° : {{ artwork.numero }}</small><br>
                                <small>Technique : {{ artwork.technique }}</small><br>
                                <small>Dimensions : {{ artwork.dimension_largeur }}x{{ artwork.dimension_hauteur }}
                                    {% if artwork.dimension_profondeur %}x{{ artwork.dimension_profondeur }}{% endif %} cm
                                </small><br>
                                <small>Prix : {{ artwork.prix }}€</small>
                            </p>

                            <!-- Remplacer la section des boutons de vote par cette version -->
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-sm vote-button {% if user_votes.get(artwork.id) == 'up' %}btn-success{% else %}btn-outline-success{% endif %}" 
                                            data-artwork-id="{{ artwork.id }}" 
                                            data-vote-type="up">
                                        <i class="fas fa-thumbs-up"></i> 
                                        <span class="vote-count-up-{{ artwork.id }}">{{ up_votes.get(artwork.id, 0) }}</span>
                                    </button>
                                    <button type="button" class="btn btn-sm vote-button {% if user_votes.get(artwork.id) == 'down' %}btn-danger{% else %}btn-outline-danger{% endif %}" 
                                            data-artwork-id="{{ artwork.id }}" 
                                            data-vote-type="down">
                                        <i class="fas fa-thumbs-down"></i> 
                                        <span class="vote-count-down-{{ artwork.id }}">{{ down_votes.get(artwork.id, 0) }}</span>
                                    </button>
                                </div>
                            </div>

                            <!-- Remplacer le script par cette version -->
                            <script>
                            document.addEventListener('DOMContentLoaded', function() {
                                document.querySelectorAll('.vote-button').forEach(button => {
                                    button.addEventListener('click', async function() {
                                        const artworkId = this.dataset.artworkId;
                                        const voteType = this.dataset.voteType;
                                        
                                        try {
                                            const response = await fetch(`/artworks/vote/${artworkId}`, {
                                                method: 'POST',
                                                headers: {
                                                    'Content-Type': 'application/x-www-form-urlencoded',
                                                    'X-Requested-With': 'XMLHttpRequest',
                                                    'Accept': 'application/json'
                                                },
                                                body: `vote_type=${voteType}`
                                            });
                                            
                                            if (!response.ok) throw new Error('Network response was not ok');
                                            
                                            const data = await response.json();
                                            if (data.success) {
                                                updateVoteButtons(artworkId, data);
                                                
                                                const messageContainer = document.getElementById('message-container');
                                                if (messageContainer) {
                                                    messageContainer.textContent = data.message;
                                                    messageContainer.className = 'alert alert-success';
                                                    messageContainer.style.display = 'block';
                                                    setTimeout(() => {
                                                        messageContainer.style.display = 'none';
                                                    }, 3000);
                                                }
                                            }
                                        } catch (error) {
                                            console.error('Error:', error);
                                        }
                                    });
                                });
                            });

                            // Le reste du code JavaScript reste inchangé...
                            </script>

                            {% if current_user.is_admin %}
                            <div class="btn-group w-100">
                                {% if artwork.statut == 'en_attente' %}
                                <form id="selection-form-{{ artwork.id }}" action="{{ url_for('artworks.selection', artwork_id=artwork.id, action='selectionne') }}" method="POST" style="display: inline;">
                                    <button type="submit" class="btn btn-success btn-sm">
                                        <i class="fas fa-check"></i> Sélectionner
                                    </button>
                                </form>
                                <form id="refuse-form-{{ artwork.id }}" action="{{ url_for('artworks.selection', artwork_id=artwork.id, action='refuse') }}" method="POST" style="display: inline;">
                                    <button type="submit" class="btn btn-danger btn-sm">
                                        <i class="fas fa-times"></i> Refuser
                                    </button>
                                </form>
                                {% elif artwork.statut == 'selectionne' %}
                                <form id="annuler-selection-form-{{ artwork.id }}" action="{{ url_for('artworks.selection', artwork_id=artwork.id, action='en_attente') }}" method="POST" style="display: inline;">
                                    <button type="submit" class="btn btn-warning btn-sm">
                                        <i class="fas fa-undo"></i> Annuler la sélection
                                    </button>
                                </form>
                                {% else %}
                                <form id="annuler-refus-form-{{ artwork.id }}" action="{{ url_for('artworks.selection', artwork_id=artwork.id, action='en_attente') }}" method="POST" style="display: inline;">
                                    <button type="submit" class="btn btn-warning btn-sm">
                                        <i class="fas fa-undo"></i> Annuler le refus
                                    </button>
                                </form>
                                {% endif %}
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
                {% endfor %}
            </div>
            {% else %}
            <p class="text-muted">Aucune œuvre pour cet artiste.</p>
            {% endif %}
        </div>
    </div>
    {% endfor %}
</div>
{% endblock %}

{% block scripts %}
<div id="message-container" class="alert" style="position: fixed; top: 80px; left: 50%; transform: translateX(-50%); z-index: 1000; min-width: 300px; display: none;"></div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.vote-button').forEach(button => {
        button.addEventListener('click', async function() {
            const artworkId = this.dataset.artworkId;
            const voteType = this.dataset.voteType;
            
            try {
                const response = await fetch(`/artworks/vote/${artworkId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'application/json'
                    },
                    body: `vote_type=${voteType}`
                });
                
                const data = await response.json();
                if (data.success) {
                    // Mise à jour immédiate des compteurs et des styles des boutons
                    const upButton = document.querySelector(`button.vote-button[data-artwork-id="${artworkId}"][data-vote-type="up"]`);
                    const downButton = document.querySelector(`button.vote-button[data-artwork-id="${artworkId}"][data-vote-type="down"]`);
                    const upCount = document.querySelector(`.vote-count-up-${artworkId}`);
                    const downCount = document.querySelector(`.vote-count-down-${artworkId}`);

                    if (upButton && downButton) {
                        upButton.className = `btn btn-sm vote-button ${data.vote_type === 'up' ? 'btn-success' : 'btn-outline-success'}`;
                        downButton.className = `btn btn-sm vote-button ${data.vote_type === 'down' ? 'btn-danger' : 'btn-outline-danger'}`;
                        
                        upCount.textContent = data.up_votes;
                        downCount.textContent = data.down_votes;
                    }
                    
                    const messageContainer = document.getElementById('message-container');
                    if (messageContainer) {
                        messageContainer.textContent = data.message;
                        messageContainer.className = 'alert alert-success';
                        messageContainer.style.display = 'block';
                        setTimeout(() => {
                            messageContainer.style.display = 'none';
                        }, 3000);
                    }
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    });

    // Gestion des formulaires admin
    document.querySelectorAll('form[id^="selection-form-"], form[id^="refuse-form-"], form[id^="annuler-"]').forEach(form => {
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            try {
                const response = await fetch(this.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                
                window.location.reload();
            } catch (error) {
                console.error('Error:', error);
            }
        });
    });
});
</script>
{% endblock %}
